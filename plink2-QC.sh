#!/bin/bash

dataset_dir=/home/anbennett2/scratch/datasets/processed_data/dbgap/WHI/test_combine
output_name=whi_test


########################################################################

# JETHRO CREATE INPUT HERE










########################################################################


# Investigate missingness per individual and per SNP and make histograms.
echo "Investigating missingness per individuals"${output_name}""
plink2 --pfile "${output_name}"_temp_updated --missing --out "${dataset_dir}"/"${output_name}"_missing


####### Originally with R - remaking in python #######
# Generate plots to visualize the missingness results.
cd "${dataset_dir}"
#Rscript --no-save "${rscripts}"/hist_miss.R



# Delete SNPs and individuals with high levels of missingness, explanation of this and all following steps can be found in box 1 and table 1 of the article mentioned in the comments of this script.
# The following two QC commands will not remove any SNPs or individuals. However, it is good practice to start the QC with these non-stringent thresholds.
# Delete SNPs with missingness >0.2.
echo "Delete SNPs with a missingness of more than 0.2"
plink2 --pfile "${dataset_dir}"/"${output_name}"_temp_updated --geno 0.2 --make-pgen --out "${dataset_dir}"/"${output_name}"_temp2


# Delete individuals with missingness >0.2.
echo "Delete individuals with a missingness of more than 0.2"
plink2 --pfile "${dataset_dir}"/"${output_name}"_temp2 --mind 0.2 --make-pgen --out "${dataset_dir}"/"${output_name}"_temp3


# Delete SNPs with missingness >0.02.
echo "Delete SNPs with a missingness of more than 0.02"
plink2 --pfile "${dataset_dir}"/"${output_name}"_temp_3 --geno 0.02 --make-pgen --out "${dataset_dir}"/"${output_name}"_temp_4


# Delete individuals with missingness >0.02.
echo "Delete individuals with a missingness of more than 0.02"
plink2 --pfile "${dataset_dir}"/"${output_name}"_temp_4 --mind 0.02 --make-pgen --out "${dataset_dir}"/"${output_name}"_temp_5



### Step2 #### - Check for sex discrepancy.

##  All individuals in this dataset are definitely female therefore no need to complete this step.

#gender_check.R

### Step 3 ### - Minor Allele Frequency

# Generate a plot of the MAF distribution.
plink2 --pfile "${dataset_dir}"/"${output_name}"_temp_5 --freq --out "${dataset_dir}"/"${output_name}"_MAF_check


# Use Rscript --no-save MAF_check.R to plot this.
#Rscript --no-save "${rscripts}"/MAF_check.R

# Calculate MAFs. Remove all variants with MAF < 0.05 from the current analysis.
echo "Delete variants with a minor allele frequency of more than 0.05"
plink2 --pfile "${dataset_dir}"/"${output_name}"_temp_5 --maf 0.05 --make-pgen --out "${dataset_dir}"/"${output_name}"_temp_6



# Delete SNPs which are not in Hardy-Weinberg equilibrium (HWE).
# Check the distribution of HWE p-values of all SNPs.
plink2 --pfile "${dataset_dir}"/"${output_name}"_temp_6 --hardy --out "${dataset_dir}"/"${output_name}"_temp_6_hardy


# Selecting SNPs with HWE p-value below 0.00001, required for one of the two plot generated by the next Rscript, allows to zoom in on strongly deviating SNPs.
gawk '{ if ($9 <0.00001) print $0 }' "${dataset_dir}"/"${output_name}"_temp_6_hardy > "${dataset_dir}"/"${output_name}"_temp_6_hardy_zoomhwe.hardy
#Rscript --no-save "${rscripts}"/hwe.R

# By default the --hwe option in plink only filters for controls.
# Therefore, we use two steps, first we use a stringent HWE threshold for controls, followed by a less stringent threshold for the case data.
plink2 --pfile "${dataset_dir}"/"${output_name}"_temp_6 --hwe 1e-6 --make-pgen --out "${dataset_dir}"/"${output_name}"_temp_filter_step1



# The HWE threshold for the cases filters out only SNPs which deviate extremely from HWE.
# This second HWE step only focusses on cases because in the controls all SNPs with a HWE p-value < hwe 1e-6 were already removed
plink2 --pfile "${dataset_dir}"/"${output_name}"_temp_filter_step1 --hwe 1e-10 --make-pgen --out "${dataset_dir}"/"${output_name}"_temp_7




# Checks for heterozygosity are performed on a set of SNPs which are not highly correlated.
# Therefore, to generate a list of non-(highly)correlated SNPs, we exclude high inversion regions (inversion.txt [High LD regions]) and prune the SNPs using the command --indep-pairwise�.
# The parameters �50 5 0.2� stand respectively for: the window size, the number of SNPs to shift the window at each step, and the multiple correlation coefficient for a SNP being regressed on all other SNPs simultaneously.
plink2 --pfile "${dataset_dir}"/"${output_name}"_temp_7 --exclude "${dataset_dir}"/"${output_name}"_inversion.txt --indep-pairwise 50 5 0.2 --out "${dataset_dir}"/"${output_name}"_indepSNP



plink2 --pfile "${dataset_dir}"/"${output_name}"_temp_7 --extract "${dataset_dir}"/"${output_name}"_indepSNP.prune.in --het --out "${dataset_dir}"/"${output_name}"_R_check


# This file contains the pruned data set.


# Plot of the heterozygosity rate distribution
#Rscript --no-save "${dataset_dir}"/"${output_name}"_check_heterozygosity_rate.R

# The following code generates a list of individuals who deviate more than 3 standard deviations from the heterozygosity rate mean.
#Rscript --no-save "${rscripts}"/heterozygosity_outliers_list.R


# Remove heterozygosity rate outliers.
plink2 --pfile "${dataset_dir}"/"${output_name}"_temp_7 --remove "${dataset_dir}"/"${output_name}"_het_fail_ind.txt --make-pgen --out "${dataset_dir}"/"${output_name}"_temp_8


# Use king cut off to estimate relatedness
plink2 --pfile "${dataset_dir}"/"${output_name}"_temp_8 --king-cutoff 0.125 --out "${dataset_dir}"/"${output_name}"_temp_9



# Using the file geneated by king-cutoff remove the samples which are too related
plink2 --pfile "${dataset_dir}"/"${output_name}"_temp_8 --remove "${dataset_dir}"/"${output_name}"_temp_9.king.cutoff.out.id --make-pgen --out "${dataset_dir}"/"${output_name}"_temp_9



plink2 --pfile "${dataset_dir}"/"${output_name}"_temp_9 --pca approx --out "${dataset_dir}"/"${output_name}"_temp_9_pca


plink2  --pfile  "${dataset_dir}"/"${output_name}"_temp_8 --covar "${dataset_dir}"/"${output_name}"_covariates.tsv --make-pgen --out "${dataset_dir}"/"${output_name}"_w_covar
